dist: trusty
language: python
python:
  - "3.6"
env:
  global:
    - REPO=self-repo-plugin
    - QGIS_PLUGIN=myplugin

before_install:

install: true

# TODO use pytest to run some tests
script: true

before_deploy:
  - sudo apt-get install -y xmlstarlet
  # Travis will clone my repo with "git clone --depth=50 --branch=..." and apparently it's not possible to change this behaviour
  # I want to be able to commit back to master so I delete the repo and I clone the complete repo again.
  # see https://stackoverflow.com/questions/32580821
  - cd ..
  - rm -rf ${REPO}
  - git clone https://github.com/${TRAVIS_REPO_SLUG}.git
  - cd ${REPO}
  - git remote rm origin
  - git remote add origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git

  # zip the plugin dir
  - zip -r ${QGIS_PLUGIN}.zip ${QGIS_PLUGIN}

deploy:
  provider: releases
  api_key: ${GITHUB_TOKEN}
  file: ${QGIS_PLUGIN}.zip
  skip_cleanup: true
  on:
    repo: ${TRAVIS_REPO_SLUG}
    tags: true

after_deploy:
  # change the version number in metadata.txt file
  - sed -i "s/^\(version\s*=\s*\).*$/\1${TRAVIS_TAG}/" myplugin/metadata.txt

  # change the version number and the download url in plugins.xml
  - xmlstarlet ed -L -u //download_url -v "https://github.com/${TRAVIS_REPO_SLUG}/releases/download/${TRAVIS_TAG}/${QGIS_PLUGIN}.zip" plugins.xml
  - xmlstarlet ed -L -u //pyqgis_plugin/@version -v "${TRAVIS_TAG}" plugins.xml

  # commit metadata.txt and plugins.xml files
  - git add myplugin/metadata.txt plugins.xml
  - git commit -m "Update metadata.txt and plugins.xml to version ${TRAVIS_TAG}"
  - git push --set-upstream origin master

